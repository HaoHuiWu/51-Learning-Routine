C51 COMPILER V9.54   LCD1602                                                               01/12/2024 17:03:32 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\LCD
                    -1602.lst) TABS(2) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include <REGX52.H>
   2          
   3          sbit LCD_RS=P2^6;
   4          sbit LCD_RW=P2^5;
   5          sbit LCD_E=P2^7;
   6          
   7          #define LCD_DataPort    P0
   8          
   9          void Delay1ms()   //@12.000MHz
  10          {
  11   1        unsigned char i, j;
  12   1      
  13   1        i = 2;
  14   1        j = 239;
  15   1        do
  16   1        {
  17   2          while (--j);
  18   2        } while (--i);
  19   1      }
  20          
  21          
  22          void LCD_WriteCommand(unsigned char Command)
  23          {
  24   1        LCD_RS=0;
  25   1        LCD_RW=0;
  26   1        LCD_DataPort=Command;
  27   1        LCD_E=1;
  28   1        Delay1ms();
  29   1        LCD_E=0;
  30   1        Delay1ms();
  31   1      }
  32          
  33          void LCD_WriteData(unsigned char Data)
  34          {
  35   1        LCD_RS=1;
  36   1        LCD_RW=0;
  37   1        LCD_DataPort=Data;
  38   1        LCD_E=1;
  39   1        Delay1ms();
  40   1        LCD_E=0;
  41   1        Delay1ms();
  42   1      }
  43          
  44          void LCD_Init(void)
  45          {
  46   1        LCD_WriteCommand(0x38);
  47   1        LCD_WriteCommand(0x0C);
  48   1        LCD_WriteCommand(0x06);
  49   1        LCD_WriteCommand(0x01);
  50   1      }
  51          
  52          void LCD_AC(unsigned char Line,unsigned char Column)
  53          {
  54   1        if(Line==1)
C51 COMPILER V9.54   LCD1602                                                               01/12/2024 17:03:32 PAGE 2   

  55   1          {
  56   2            LCD_WriteCommand(0x80|(Column-1));
  57   2          }
  58   1          else
  59   1          {
  60   2            LCD_WriteCommand(0x80|(Column-1)+0x40);
  61   2          }
  62   1      }
  63          void LCD_ShowChar(unsigned char Line,unsigned char Column,unsigned char Char)
  64          { 
  65   1        LCD_AC(Line,Column);
  66   1        LCD_WriteData(Char);
  67   1      }
  68          
  69          void LCD_ShowString(unsigned char Line,unsigned char Column,unsigned char *String)
  70          { 
  71   1        unsigned char i;
  72   1        LCD_AC(Line,Column);
  73   1        for(i=0;String[i]!='\0';i++)
  74   1        { 
  75   2          LCD_WriteData(String[i]);
  76   2        }
  77   1      }
  78          
  79          int LCD_Pow(int X,int Y)
  80          {
  81   1        unsigned char i;
  82   1        int Result=1;
  83   1        for(i=0;i<Y;i++)
  84   1        {
  85   2          Result*=X;
  86   2        }
  87   1        return Result;
  88   1      }
  89          
  90          void LCD_ShowNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
  91          {
  92   1        unsigned char i;
  93   1        LCD_AC(Line,Column);
  94   1        for(i=Length;i>0;i--)
  95   1        {
  96   2          LCD_WriteData('0'+Number/LCD_Pow(10,i-1)%10);
  97   2        }
  98   1      }
  99          
 100          void LCD_ShowSignedNum(unsigned char Line,unsigned char Column,int Number,unsigned char Length)
 101          {
 102   1        unsigned char i;
 103   1        unsigned int Num;
 104   1        LCD_AC(Line,Column);
 105   1        if(Number>=0)
 106   1        {
 107   2          LCD_WriteData('+');
 108   2          Num=Number;
 109   2        }
 110   1        if(Number<0)
 111   1        {
 112   2          LCD_WriteData('-');
 113   2          Num=-Number;
 114   2        }
 115   1        for(i=Length;i>0;i--)
 116   1        {
C51 COMPILER V9.54   LCD1602                                                               01/12/2024 17:03:32 PAGE 3   

 117   2          LCD_WriteData('0'+Num/LCD_Pow(10,i-1)%10);
 118   2        }
 119   1      }
 120          
 121          void LCD_ShowHexNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 122          {
 123   1        unsigned char i;
 124   1        unsigned char Num;
 125   1        
 126   1        LCD_AC(Line,Column);
 127   1        for(i=Length;i>0;i--)
 128   1        { 
 129   2          Num=Number/LCD_Pow(16,i-1)%16;
 130   2          if(Num<10)
 131   2          {
 132   3            LCD_WriteData('0'+Num);
 133   3          }
 134   2          else
 135   2          {
 136   3            LCD_WriteData('A'+Num-10);
 137   3          }
 138   2        }
 139   1      }
 140          
 141          void LCD_ShowBinNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 142          {
 143   1        unsigned char i;
 144   1        LCD_AC(Line,Column);
 145   1        for(i=Length;i>0;i--)
 146   1        {
 147   2          LCD_WriteData('0'+Number/LCD_Pow(2,i-1)%2);
 148   2        }
 149   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    393    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      29
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
